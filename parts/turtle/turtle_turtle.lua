--SJNOS by MC403. turtle_turtle.exe (GzQAcQpf)

local tArgs = {...}

local function start()

local function tcolor(color)
	if (term.isColor()) then
		term.setTextColor(color)
	end
end
local function bcolor(color)
	if (term.isColor()) then
		term.setBackgroundColor(color)
	end
end
local function cpos(x, y)
	term.setCursorPos(x, y)
end
local function clear()
	term.clear()
end
local function getTime()
	local a = textutils.formatTime(os.time(),true)
	if #a==4 then
		a = "0"..a
	end
	return a
end
local function getFileContent(path)
	if (fs.exists(path)) then
		local f = fs.open(path, "r")
		local contentArray = {}
		local contentString = ""

		local line = "!"

		while (line ~= nil) do
			line = f.readLine()
			contentArray[#contentArray + 1] = line
		end
		f.close()
		local f = fs.open(path, "r")
		contentString = f.readAll()
		f.close()

		return contentArray, contentString
	end
	return nil
end
local function getConfigFileContent(path, char, alternative)
	if (fs.exists(path)) then
		local array = getFileContent(path)
		local result = {}
		local resultALT = {}
		if (char == nil) then char = "=" end
		for i=1, #array do
			local name = string.sub(array[i], 1, string.find(array[i], char)-1)
			local value = string.sub(array[i], string.find(array[i], char)+1)
			
			result[name] = value
			resultALT[i] = {
				["name"] = name,
				["value"] = value
			}
		end
		if (alternative == true) then
			return resultALT
		end
		return result
	end
	return nil
end
local function getPeripheralSide(p_type)
	local sides = {"left","right","top","bottom","front","back"}
	for i=1,6 do
		if peripheral.isPresent(sides[i]) then
			if peripheral.getType(sides[i])==p_type then
				return sides[i]
			end
		end
	end
	return nil
end
local function getRednet(doOpenRednet)
	local REDNETSIDE = getPeripheralSide("modem")
	local REDNET = (REDNETSIDE ~= nil)
	if (doOpenRednet and REDNET and (not rednet.isOpen(REDNETSIDE))) then
		rednet.open(REDNETSIDE)
	end
	return REDNET, REDNETSIDE
end

if (tArgs[1] == "#install#") then
	fs.delete("startup")
	if (fs.exists("SJNOS/partinstaller.exe")) then
		fs.move("SJNOS/partinstaller.exe","SJNOS/partstart.exe")
	end
	
	local f = fs.open("startup","w")
	f.writeLine("--Autogenerated Startup by SJNOS")
	f.writeLine('shell.run("SJNOS/partstart.exe #firstrun#")')
	f.close()
	os.reboot()
elseif (tArgs[1] == "#firstrun#") then
	tcolor(colors.cyan)
	bcolor(colors.white)
	clear()
	cpos(1,1)
	textutils.slowPrint("Hello, welcome to SJN Turtle Turtle!")

	print("> Start Setup")
	print("  Deinstall")

	local selected = 1
	while (true) do
		local event, btn = os.pullEventRaw()
		if (event=="key") then
			if (btn==keys.enter) then
				break
			elseif (btn==keys.up or btn==keys.down) then
				cpos(1, 1+selected)
				write(" ")
				if (selected == 1) then
					selected = 2
				else
					selected = 1
				end
				cpos(1, 1+selected)
				write(">")
			end
		end
	end

	if (selected==2) then
		--Deinstall
		tcolor(colors.lightGray)
		bcolor(colors.gray)
		clear()
		local function w(text)
			term.scroll(1)
			cpos(1,19)
			write(text)
		end
		w("Starting Deinstallation...")
		sleep(0.5)
		fs.delete("startup")
		fs.delete("SJNOS")
		tcolor(colors.lime)
		w("Success!")
		tcolor(colors.lightGray)
		w("Exiting...")
		w("Goodbye!")
		sleep(2)
		os.reboot()
	else
		--Setup
		tcolor(colors.cyan)
		bcolor(colors.white)
		clear()
		cpos(1,1)
		
		local REDNETSIDE = nil

		local function refresh()
			local _, p = getRednet(true)
			REDNETSIDE = p
		end
		
		refresh()
		
		while (REDNETSIDE == nil) do
			tcolor(colors.red)
			write("Modem required!")
			tcolor(colors.cyan)
			print(" ANY KEY to refresh, CTRG-T to exit.")
			os.pullEventRaw("key")
			refresh()
		end
		
		tcolor(colors.lime)
		print("Found on "..REDNETSIDE..".")

		local server_id = -1

		while (server_id == -1) do
			tcolor(colors.cyan)
			write("\nID of Turtle Server: $ ")
			local id_raw = read()

			write("Turtle Server Key:   $ ")
			local key = read("*")

			write("Name of this Turtle: $ ")
			local name = read()

			textutils.slowWrite("\nConnecting... ENTER=retry, SPACE=reboot")

			if (tonumber(id_raw) ~= nil) then
				local target = tonumber(id_raw)
				local timer = os.startTimer(2)
				rednet.send(target, "~SJN@TURTLETURTLE:CONNECT#"..key.."###"..name)
				while (true) do
					local event, id, msg, dis = os.pullEventRaw()
					if (event == "key" and id == keys.enter) then
						tcolor(colors.red)
						write("\nCanceled.")
						break
					elseif (event == "key" and id == keys.space) then
						os.reboot()
					elseif (event == "timer") then
						tcolor(colors.red)
						write("\nNo response.")
						break
					elseif (event == "rednet_message" and id == target) then
						if (msg == "~SJN@TURTLESERVER:CONNECT") then
							tcolor(colors.lime)
							write("\nConnected!")
							server_id = target
							break
						end
					end
				end
			end
			write("\n")
		end

		local f = fs.open("SJNOS/cfg", "w")
		f.writeLine("server="..server_id)
		f.close()

		local f = fs.open("startup", "w")
		f.writeLine("--Autogenerated Startup by SJNOS")
		f.writeLine('shell.run("SJNOS/partstart.exe")')
		f.close()
		
		tcolor(colors.cyan)
		textutils.slowPrint("You are now connected with #"..server_id.."!")
		sleep(1)
		textutils.slowPrint("Rebooting...")
		os.reboot()
	end
end

tcolor(colors.orange)
bcolor(colors.gray)
clear()
cpos(1,1)

local REDNET, REDNETSIDE = getRednet(true)
if (not REDNET) then
	tcolor(colors.red)
	print("You need a wireless modem!")
	print("[Press any key to reboot!]")
	os.pullEventRaw()
	os.reboot()
end

local cfg = getConfigFileContent("SJNOS/cfg")
local SERVER = cfg.server

tcolor(colors.lightGray)
cpos(1, 19)
print("SJNOS TURTLE SERVER #"..os.getComputerID())
print("Press any key to enter the terminal and enter 'help' for help")
write("The Server is listening now and writes a message, if something happends.")

local running = true
local key_input = true

while (running) do
	local event, btn, x, y = os.pullEventRaw()
	if (event == "key" and key_input) then
		term.scroll(1)
		cpos(1,13)
		tcolor(colors.orange)
		write("$ ")
		input = read()
		tcolor(colors.lightGray)
		if (input=="help") then
			print("$help            Shows you some help.  ")
			print("$clear           Clears the screen.    ")
			print("$reboot          Reboots the computer  ")
			print("$server          Shows your server.    ")
			print("$cos             Goes back to CraftOS. ")
			print("$start           Starts Turtle, Stops  ".."\n                 Stops Input.          ")
		elseif (input=="clear") then
			clear()
		elseif (input=="reboot") then
			os.reboot()
		elseif (input=="server") then
			tcolor(colors.yellow)
			write("Your server is #"..SERVER)
		elseif (input=="cos") then
			running = false
		elseif (input == "start") then
			print("With 'start', your Turtle will perform actions send by your turtle server, while you can't enter commands.")
			write("Enter 'yes' to continue > ")
			if (read() == "yes") then
				write("Confirmed.")
				key_input = false
			end
		elseif (input~="") then
			tcolor(colors.red)
			write("This command doesn't exist! Try $help!")
		end
	elseif (event == "rednet_message") then
		write("\n["..getTime().."]: #"..id.." send "..string.sub(msg, 0, 100))
	end
end

tcolor(colors.white)
bcolor(colors.black)
clear()
cpos(1,1)

end
local ok, err = pcall(start)
if (not ok) then
	if (term.isColor()) then
		term.setTextColor(colors.orange)
		term.setBackgroundColor(colors.gray)
	end
	term.clear()
	term.setCursorPos(1,1)
	print("ERROR!")
	print(err)
end